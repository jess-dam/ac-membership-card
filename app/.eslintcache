[{"/Users/jess.dam/Dev/Repos/ac-card-membership/app/src/index.js":"1","/Users/jess.dam/Dev/Repos/ac-card-membership/app/src/App.js":"2","/Users/jess.dam/Dev/Repos/ac-card-membership/app/src/reportWebVitals.js":"3","/Users/jess.dam/Dev/Repos/ac-card-membership/app/src/components/UserProfile.js":"4","/Users/jess.dam/Dev/Repos/ac-card-membership/app/src/components/UserCard.js":"5","/Users/jess.dam/Dev/Repos/ac-card-membership/app/src/components/auth/SignUp.js":"6","/Users/jess.dam/Dev/Repos/ac-card-membership/app/src/components/auth/CurrentUser.js":"7","/Users/jess.dam/Dev/Repos/ac-card-membership/app/src/components/auth/SignIn.js":"8","/Users/jess.dam/Dev/Repos/ac-card-membership/app/src/components/auth/AuthError.js":"9","/Users/jess.dam/Dev/Repos/ac-card-membership/app/src/components/AllUsers.js":"10","/Users/jess.dam/Dev/Repos/ac-card-membership/app/src/components/NavBar.js":"11"},{"size":500,"mtime":1607342120785,"results":"12","hashOfConfig":"13"},{"size":854,"mtime":1607695492643,"results":"14","hashOfConfig":"13"},{"size":362,"mtime":1607342120786,"results":"15","hashOfConfig":"13"},{"size":1786,"mtime":1608290483194,"results":"16","hashOfConfig":"13"},{"size":2848,"mtime":1608282372808,"results":"17","hashOfConfig":"13"},{"size":2540,"mtime":1608283766184,"results":"18","hashOfConfig":"13"},{"size":474,"mtime":1607713607487,"results":"19","hashOfConfig":"13"},{"size":2841,"mtime":1608283680042,"results":"20","hashOfConfig":"13"},{"size":118,"mtime":1607629927208,"results":"21","hashOfConfig":"13"},{"size":1375,"mtime":1607712513305,"results":"22","hashOfConfig":"13"},{"size":1811,"mtime":1608282372807,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"1kr3fsd",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"26"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"26"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"/Users/jess.dam/Dev/Repos/ac-card-membership/app/src/index.js",[],["49","50"],"/Users/jess.dam/Dev/Repos/ac-card-membership/app/src/App.js",[],"/Users/jess.dam/Dev/Repos/ac-card-membership/app/src/reportWebVitals.js",[],"/Users/jess.dam/Dev/Repos/ac-card-membership/app/src/components/UserProfile.js",["51","52","53"],"/Users/jess.dam/Dev/Repos/ac-card-membership/app/src/components/UserCard.js",["54"],"import React from 'react';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport './UserCard.scss';\n\nimport axios from 'axios';\n\n\nfunction UserCard (user) {\n    const GET_CARD_PATH = `http://localhost:3001/user/${user.user._id}/card`;\n    const POST_CARD_PATH  = GET_CARD_PATH + '/register';\n    const PUT_CARD_POINTS_PATH = GET_CARD_PATH + '/points';\n    const [ card, setCard ] = React.useState();\n    const [ pointsToAdd, setPointsToAdd ] = React.useState('');\n\n    const getCard = () => {\n        axios.get(GET_CARD_PATH)\n        .then((res) => {\n            setCard(res.data.card);\n        });\n    }\n\n    const registerCard = () => {\n        console.log('registering card');\n        axios.post(POST_CARD_PATH)\n        .then(getCard())\n        .catch(err => console.log('failed to register card ' + err));\n    }\n\n    React.useEffect(() => {\n        getCard();\n    },[]);\n\n    const handlePointsChange = (event) => {\n        setPointsToAdd(event.target.value);\n    }\n\n    const addPoints = () => {\n        axios.put(PUT_CARD_POINTS_PATH, { cardId: card._id, pointsToAdd: parseInt(pointsToAdd) })\n        .then(() => getCard())\n        .then(() => setPointsToAdd(''))\n        .catch(err => console.log('Could not update points: ', err));\n    }\n\n    return <>\n        <Card className='card'>\n            { card && user && user.user ?\n                <>\n                    <CardContent className='card-details'>\n                        { !user.user.isViewingAsAdmin ?\n                            <>\n                                <h4>Leaf Loyalty Card</h4>\n                                <h5>{user.user.name}</h5>\n                            </>\n                            : <></>\n                        }\n                        <h5><span>{card.points}</span> points</h5>\n                    </CardContent>\n                    { user.user.isViewingAsAdmin ?\n                            <div className='card-points-input'>\n                                <TextField label='points to add' value={pointsToAdd} onChange={handlePointsChange}/>\n                                <Button onClick={addPoints}>Add Points</Button>\n                            </div>\n                        : <></>\n                    }\n                </>\n            :\n                <>\n                    <CardContent className='card-no-details'>\n                    <h5>{user.user.isViewingAsAdmin ? (user.user.name + ` doesn't`) : `You don't`} have a card at the moment, would you like to register one?</h5>\n                        <Button onClick={registerCard}>Make a card please</Button>\n                    </CardContent>\n                </>\n            }\n        </Card>\n    </>\n}\n\nexport default UserCard;","/Users/jess.dam/Dev/Repos/ac-card-membership/app/src/components/auth/SignUp.js",[],"/Users/jess.dam/Dev/Repos/ac-card-membership/app/src/components/auth/CurrentUser.js",[],"/Users/jess.dam/Dev/Repos/ac-card-membership/app/src/components/auth/SignIn.js",[],"/Users/jess.dam/Dev/Repos/ac-card-membership/app/src/components/auth/AuthError.js",[],"/Users/jess.dam/Dev/Repos/ac-card-membership/app/src/components/AllUsers.js",["55","56","57"],"import React from 'react';\nimport CurrentUser from './auth/CurrentUser';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport axios from 'axios';\nimport './AllUsers.scss';\n\nimport UserCard from './UserCard';\n\nfunction AllUsers () {\n    const GET_ALL_USERS_PATH = 'http://localhost:3001/user/all';\n    const [users, setUsers] = React.useState([]);\n\n    const getUsers = () => {\n        axios.get(GET_ALL_USERS_PATH)\n            .then(res => {\n                setUsers(res.data.allUsers);\n                console.log(res.data);\n            });\n    }\n\n    React.useEffect(() => {\n        getUsers();\n    }, []);\n\n    return <div className='all-users'>\n        <h2 className='all-users_main-header'>Users</h2>\n        { users ?\n            <div>\n                <h5 className='all-users_main-header'>Think anyone's been an especially loyal customer? Give them some points to show your appreciation!</h5>\n                { users.map((user) => {\n                    return <div className='all-users_user'>\n                            <h5 className='all-users_header'>{user.name}</h5>\n                            <UserCard user={{...user, isViewingAsAdmin: true }}/>\n                    </div>\n                }) }\n            </div>\n\n            : <h5>No users available</h5>\n        }\n\n\n    </div>\n\n}\n\nexport default AllUsers;","/Users/jess.dam/Dev/Repos/ac-card-membership/app/src/components/NavBar.js",[],{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","severity":1,"message":"63","line":9,"column":8,"nodeType":"64","messageId":"65","endLine":9,"endColumn":12},{"ruleId":"62","severity":1,"message":"66","line":10,"column":8,"nodeType":"64","messageId":"65","endLine":10,"endColumn":19},{"ruleId":"67","severity":1,"message":"68","line":27,"column":9,"nodeType":"69","endLine":27,"endColumn":37},{"ruleId":"67","severity":1,"message":"70","line":34,"column":7,"nodeType":"71","endLine":34,"endColumn":9,"suggestions":"72"},{"ruleId":"62","severity":1,"message":"73","line":2,"column":8,"nodeType":"64","messageId":"65","endLine":2,"endColumn":19},{"ruleId":"62","severity":1,"message":"63","line":3,"column":8,"nodeType":"64","messageId":"65","endLine":3,"endColumn":12},{"ruleId":"62","severity":1,"message":"66","line":4,"column":8,"nodeType":"64","messageId":"65","endLine":4,"endColumn":19},"no-native-reassign",["74"],"no-negated-in-lhs",["75"],"no-unused-vars","'Card' is defined but never used.","Identifier","unusedVar","'CardContent' is defined but never used.","react-hooks/exhaustive-deps","React Hook React.useEffect has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","CallExpression","React Hook React.useEffect has a missing dependency: 'getCard'. Either include it or remove the dependency array.","ArrayExpression",["76"],"'CurrentUser' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"77","fix":"78"},"Update the dependencies array to be: [getCard]",{"range":"79","text":"80"},[1023,1025],"[getCard]"]